[{"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\index.js":"1","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\App.js":"2","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\Components\\person\\person.jsx":"4"},{"size":517,"mtime":1610376755775,"results":"5","hashOfConfig":"6"},{"size":2520,"mtime":1610514155591,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1610376755776,"results":"8","hashOfConfig":"6"},{"size":1662,"mtime":1610512518018,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"181u9f4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\index.js",[],["21","22"],"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\App.js",["23","24"],"import './App.scss';\r\nimport Person from './Components/person/person'\r\nimport logo from \"./logo.jpg\"\r\nimport { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal'\r\n\r\nfunction App(props) {\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    addPerson()\r\n  },[]);\r\n\r\n  function openModal(){\r\n      setIsOpen(true);\r\n  }\r\n  function closeModal(){\r\n      setIsOpen(false);\r\n    }\r\n\r\n    const customStyles = {\r\n      content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n      }\r\n    };\r\n\r\n    async function addPerson(event){\r\n      try{\r\n          let personData = await fetch(\"http://localhost:5000/Home/getallpersons\",{\r\n              method: 'POST',\r\n              mode: \"no-cors\",\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                personName: event.target.personName.value,\r\n                age: event.target.age.value,\r\n                cin:event.target.cin.value \r\n              })      \r\n          });\r\n\r\n      }catch(e){\r\n          console.log(\"Post error:\",e)\r\n      }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    addPerson() \r\n  }\r\n\r\n\r\n\r\n\r\n    function addPersonModal(){\r\n      return(\r\n        <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <button onClick={closeModal}>close</button>\r\n        <div>Add a Patient</div>\r\n        <form onSubmit={handleSubmit}>\r\n          Person Name : <input type= 'text' name= 'personName'/><br/>\r\n          Age: <input type= 'text' name= 'age'/><br/>\r\n          Cin: <input type= 'text' name= 'cin'/><br/>\r\n          <button onClick= {addPerson()}>Add</button>\r\n        </form>\r\n      </Modal>\r\n      )\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <img src={logo}></img>\r\n        <div>\r\n          <ul>\r\n            <li>\r\n              Filter by\r\n            </li>\r\n            <li onClick ={()=>openModal()}>Add patients</li>\r\n            {addPersonModal()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"gridContainer\">\r\n        <Person/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\Components\\person\\person.jsx",["25","26","27","28","29"],"import React from 'react'\r\nimport { useState , useEffect } from 'react';\r\nimport \"./person.scss\";\r\nimport Modal from 'react-modal';\r\n\r\nfunction Person(){\r\n\r\n    const [person, setPerson] = useState([]);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    function openModal(){\r\n        setIsOpen(true);\r\n    }\r\n    function closeModal(){\r\n        setIsOpen(false);\r\n      }\r\n    useEffect(async () => {\r\n        const person = await fetch(\"http://localhost:5000/Home/getallpersons\")\r\n            .then(Response => Response.json())\r\n        setPerson([...person])\r\n      },[]);\r\n\r\n      function colorC(p){\r\n          if(p.colorCode == \"red\"){\r\n              return \"red\"\r\n          }else if(p.colorCode == \"orange\"){\r\n              return \"orange\"\r\n          }else if(p.colorCode == \"green\"){\r\n              return \"green\"\r\n          }else if (p.isAlive == \"true\"){\r\n              return \"dead\";\r\n          }\r\n      }\r\n\r\n      function PersonModal(person){\r\n          return(\r\n            <Modal\r\n            isOpen= {modalIsOpen}\r\n          >\r\n              <button onClick={()=>closeModal()}></button>\r\n              {person.personName}          \r\n          </Modal>\r\n          )\r\n      }\r\n\r\n    return(\r\n        <div className= 'mainContainer'>\r\n            {person.map(bnadem => (\r\n                <div className= {`${colorC(bnadem)} personContainer`} onClick= {() => openModal()}>\r\n                    <h4>{bnadem.personName}</h4>\r\n                    <p>{bnadem.cin}</p>\r\n                    <p>{bnadem.age}</p>\r\n                    {PersonModal(bnadem)}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Person",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":35,"column":15,"nodeType":"36","messageId":"37","endLine":35,"endColumn":25},{"ruleId":"38","severity":1,"message":"39","line":84,"column":9,"nodeType":"40","endLine":84,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":16,"column":15,"nodeType":"43","endLine":20,"endColumn":8},{"ruleId":"44","severity":1,"message":"45","line":23,"column":26,"nodeType":"46","messageId":"47","endLine":23,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":25,"column":32,"nodeType":"46","messageId":"47","endLine":25,"endColumn":34},{"ruleId":"44","severity":1,"message":"45","line":27,"column":32,"nodeType":"46","messageId":"47","endLine":27,"endColumn":34},{"ruleId":"44","severity":1,"message":"45","line":29,"column":31,"nodeType":"46","messageId":"47","endLine":29,"endColumn":33},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'personData' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]