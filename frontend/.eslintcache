[{"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\index.js":"1","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\App.js":"2","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\Components\\person\\person.jsx":"4"},{"size":517,"mtime":1610376755775,"results":"5","hashOfConfig":"6"},{"size":380,"mtime":1610397356231,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1610376755776,"results":"8","hashOfConfig":"6"},{"size":775,"mtime":1610409317902,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"181u9f4",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\index.js",[],["19","20"],"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\App.js",["21"],"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\morsc\\source\\repos\\covid-project\\frontend\\src\\Components\\person\\person.jsx",["22","23","24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":9,"column":9,"nodeType":"32","endLine":9,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":7,"column":12,"nodeType":"35","messageId":"36","endLine":7,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":7,"column":20,"nodeType":"35","messageId":"36","endLine":7,"endColumn":29},{"ruleId":"33","severity":1,"message":"38","line":8,"column":14,"nodeType":"35","messageId":"36","endLine":8,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":14,"column":15,"nodeType":"41","endLine":18,"endColumn":8},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'person' is assigned a value but never used.","Identifier","unusedVar","'setPerson' is assigned a value but never used.","'getDivColor' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]